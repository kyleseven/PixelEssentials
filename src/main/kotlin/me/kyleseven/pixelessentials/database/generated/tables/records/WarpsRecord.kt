/*
 * This file is generated by jOOQ.
 */
package me.kyleseven.pixelessentials.database.generated.tables.records


import me.kyleseven.pixelessentials.database.generated.tables.Warps

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class WarpsRecord() : UpdatableRecordImpl<WarpsRecord>(Warps.WARPS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var x: Float?
        set(value): Unit = set(2, value)
        get(): Float? = get(2) as Float?

    open var y: Float?
        set(value): Unit = set(3, value)
        get(): Float? = get(3) as Float?

    open var z: Float?
        set(value): Unit = set(4, value)
        get(): Float? = get(4) as Float?

    open var pitch: Float?
        set(value): Unit = set(5, value)
        get(): Float? = get(5) as Float?

    open var yaw: Float?
        set(value): Unit = set(6, value)
        get(): Float? = get(6) as Float?

    open var world: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised WarpsRecord
     */
    constructor(
        id: Int? = null,
        name: String? = null,
        x: Float? = null,
        y: Float? = null,
        z: Float? = null,
        pitch: Float? = null,
        yaw: Float? = null,
        world: String? = null
    ) : this() {
        this.id = id
        this.name = name
        this.x = x
        this.y = y
        this.z = z
        this.pitch = pitch
        this.yaw = yaw
        this.world = world
        resetChangedOnNotNull()
    }
}
