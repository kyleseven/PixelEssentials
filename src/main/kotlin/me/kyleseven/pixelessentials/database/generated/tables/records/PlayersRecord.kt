/*
 * This file is generated by jOOQ.
 */
package me.kyleseven.pixelessentials.database.generated.tables.records


import me.kyleseven.pixelessentials.database.generated.tables.Players

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PlayersRecord private constructor() : UpdatableRecordImpl<PlayersRecord>(Players.PLAYERS) {

    open var playerId: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var lastAccountName: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var uuid: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    open var ipAddress: String
        set(value): Unit = set(3, value)
        get(): String = get(3) as String

    open var firstJoin: Long
        set(value): Unit = set(4, value)
        get(): Long = get(4) as Long

    open var lastSeen: Long
        set(value): Unit = set(5, value)
        get(): Long = get(5) as Long

    open var totalPlaytime: Long
        set(value): Unit = set(6, value)
        get(): Long = get(6) as Long

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised PlayersRecord
     */
    constructor(
        playerId: Long? = null,
        lastAccountName: String,
        uuid: String,
        ipAddress: String,
        firstJoin: Long,
        lastSeen: Long,
        totalPlaytime: Long
    ) : this() {
        this.playerId = playerId
        this.lastAccountName = lastAccountName
        this.uuid = uuid
        this.ipAddress = ipAddress
        this.firstJoin = firstJoin
        this.lastSeen = lastSeen
        this.totalPlaytime = totalPlaytime
        resetChangedOnNotNull()
    }
}
