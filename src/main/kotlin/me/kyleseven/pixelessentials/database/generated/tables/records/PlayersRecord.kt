/*
 * This file is generated by jOOQ.
 */
package me.kyleseven.pixelessentials.database.generated.tables.records


import me.kyleseven.pixelessentials.database.generated.tables.Players

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PlayersRecord() : UpdatableRecordImpl<PlayersRecord>(Players.PLAYERS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var lastAccountName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var uuid: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var ipAddress: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var firstJoin: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var lastSeen: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    open var totalPlaytime: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsBanned")
    open var isBanned: Boolean?
        set(value): Unit = set(7, value)
        get(): Boolean? = get(7) as Boolean?

    open var banReason: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised PlayersRecord
     */
    constructor(
        id: Int? = null,
        lastAccountName: String? = null,
        uuid: String? = null,
        ipAddress: String? = null,
        firstJoin: Int? = null,
        lastSeen: Int? = null,
        totalPlaytime: Int? = null,
        isBanned: Boolean? = null,
        banReason: String? = null
    ) : this() {
        this.id = id
        this.lastAccountName = lastAccountName
        this.uuid = uuid
        this.ipAddress = ipAddress
        this.firstJoin = firstJoin
        this.lastSeen = lastSeen
        this.totalPlaytime = totalPlaytime
        this.isBanned = isBanned
        this.banReason = banReason
        resetChangedOnNotNull()
    }
}
